# Generated by Django 5.1.2 on 2025-02-26 03:52

import core.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Player",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("username", models.CharField(max_length=100, unique=True)),
                ("date_joined", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="AnalysisCache",
            fields=[
                ("key", models.CharField(max_length=100, primary_key=True, serialize=False)),
                ("size_bytes", models.IntegerField()),
                ("last_accessed", models.DateTimeField(auto_now=True)),
                ("priority", models.IntegerField(default=0)),
                ("expires_at", models.DateTimeField()),
            ],
            options={
                "db_table": "analysis_cache",
                "indexes": [
                    models.Index(fields=["last_accessed"], name="analysis_ca_last_ac_b784f8_idx"),
                    models.Index(fields=["priority"], name="analysis_ca_priorit_75983d_idx"),
                    models.Index(fields=["expires_at"], name="analysis_ca_expires_3d3640_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Game",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("platform", models.CharField(max_length=20)),
                ("game_id", models.CharField(max_length=100)),
                ("pgn", models.TextField()),
                ("result", models.CharField(max_length=10)),
                ("white", models.CharField(max_length=100)),
                ("black", models.CharField(max_length=100)),
                ("opponent", models.CharField(default="Unknown", max_length=100)),
                ("opening_name", models.CharField(default="Unknown Opening", max_length=200)),
                ("date_played", models.DateTimeField()),
                ("time_control", models.CharField(default="blitz", max_length=50)),
                (
                    "time_control_type",
                    models.CharField(
                        choices=[
                            ("bullet", "Bullet"),
                            ("blitz", "Blitz"),
                            ("rapid", "Rapid"),
                            ("classical", "Classical"),
                        ],
                        default="blitz",
                        max_length=20,
                    ),
                ),
                ("eco_code", models.CharField(max_length=3, null=True)),
                ("opening_played", models.CharField(default="Unknown Opening", max_length=200)),
                ("opening_variation", models.CharField(default="Unknown Variation", max_length=200)),
                ("opponent_opening", models.CharField(default="Unknown Opponent Opening", max_length=200)),
                ("analysis_version", models.IntegerField(default=1)),
                ("last_analysis_date", models.DateTimeField(null=True)),
                (
                    "analysis_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("analyzing", "Analyzing"),
                            ("analyzed", "Analyzed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("analysis_priority", models.IntegerField(default=0)),
                ("analysis", models.JSONField(blank=True, null=True)),
                ("feedback", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("white_elo", models.IntegerField(blank=True, null=True)),
                ("black_elo", models.IntegerField(blank=True, null=True)),
                (
                    "player_color",
                    models.CharField(choices=[("white", "White"), ("black", "Black")], default="white", max_length=5),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("analyzing", "Analyzing"),
                            ("analyzed", "Analyzed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("analysis_completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        default=core.models.get_default_user,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="games",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "games",
                "ordering": ["-date_played"],
            },
        ),
        migrations.CreateModel(
            name="BatchAnalysis",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("status", models.CharField(default="pending", max_length=20)),
                ("games", models.ManyToManyField(related_name="batch_analyses", to="core.game")),
            ],
        ),
        migrations.CreateModel(
            name="GameAnalysis",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("metrics", models.JSONField(default=dict)),
                ("phase_metrics", models.JSONField(default=dict)),
                ("time_metrics", models.JSONField(default=dict)),
                ("tactical_metrics", models.JSONField(default=dict)),
                ("positional_metrics", models.JSONField(default=dict)),
                ("feedback", models.JSONField(default=dict)),
                ("time_control_feedback", models.JSONField(default=dict)),
                ("study_plan", models.JSONField(default=dict)),
                ("cache_key", models.CharField(default="default_cache_key", max_length=100, unique=True)),
                ("analysis_metadata", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("game", models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to="core.game")),
            ],
            options={
                "db_table": "game_analysis",
            },
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("credits", models.IntegerField(default=10)),
                ("bullet_rating", models.IntegerField(default=1200)),
                ("blitz_rating", models.IntegerField(default=1200)),
                ("rapid_rating", models.IntegerField(default=1200)),
                ("classical_rating", models.IntegerField(default=1200)),
                ("email_verified", models.BooleanField(default=False)),
                ("email_verification_token", models.CharField(blank=True, max_length=100, null=True)),
                ("email_verification_sent_at", models.DateTimeField(null=True)),
                ("email_verified_at", models.DateTimeField(null=True)),
                ("preferences", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("chesscom_username", models.CharField(blank=True, max_length=100, null=True)),
                ("lichess_username", models.CharField(blank=True, max_length=100, null=True)),
                ("rating_history", models.JSONField(blank=True, default=dict)),
                (
                    "user",
                    models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[("purchase", "Purchase"), ("usage", "Usage"), ("refund", "Refund")], max_length=20
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ("credits", models.IntegerField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("refunded", "Refunded"),
                        ],
                        max_length=20,
                    ),
                ),
                ("stripe_payment_id", models.CharField(blank=True, max_length=100, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("user", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                "db_table": "transactions",
            },
        ),
        migrations.AddIndex(
            model_name="game",
            index=models.Index(fields=["user", "platform"], name="games_user_id_da8406_idx"),
        ),
        migrations.AddIndex(
            model_name="game",
            index=models.Index(fields=["date_played"], name="games_date_pl_b13d0d_idx"),
        ),
        migrations.AddIndex(
            model_name="game",
            index=models.Index(fields=["analysis_status"], name="games_analysi_386de9_idx"),
        ),
        migrations.AddIndex(
            model_name="game",
            index=models.Index(fields=["time_control_type"], name="games_time_co_a145e7_idx"),
        ),
        migrations.AddIndex(
            model_name="game",
            index=models.Index(fields=["eco_code"], name="games_eco_cod_b82c47_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="game",
            unique_together={("user", "platform", "game_id")},
        ),
        migrations.AddIndex(
            model_name="gameanalysis",
            index=models.Index(fields=["cache_key"], name="game_analys_cache_k_738172_idx"),
        ),
        migrations.AddIndex(
            model_name="gameanalysis",
            index=models.Index(fields=["created_at"], name="game_analys_created_b2b4a9_idx"),
        ),
        migrations.AddIndex(
            model_name="profile",
            index=models.Index(fields=["user"], name="core_profil_user_id_155486_idx"),
        ),
    ]
