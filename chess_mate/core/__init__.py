"""
Core module for ChessMate application.

This package contains the primary functionality for chess analysis, game management,
and user-facing features.
"""

# Export cache middleware components
from .cache_middleware import (
    CacheInvalidationMiddleware,
    invalidate_cache_on_delete,
    invalidate_cache_on_save,
    setup_cache_invalidation,
)
from .error_handling import (
    AuthenticationError,
    BaseError,
    ChessServiceError,
    CreditLimitError,
    ExternalServiceError,
    InvalidOperationError,
    PermissionDeniedError,
    RateLimitExceededError,
    ResourceNotFoundError,
    ServiceUnavailableError,
    TaskError,
    ValidationError,
    create_error_response,
    create_success_response,
    handle_api_error,
    exception_handler,
)

# Export Redis configuration
from .redis_config import (
    KEY_PREFIX_ANALYSIS,
    KEY_PREFIX_CACHE_TAG,
    KEY_PREFIX_GAME,
    KEY_PREFIX_LOCK,
    KEY_PREFIX_PLAYER,
    KEY_PREFIX_RATE_LIMIT,
    KEY_PREFIX_STATS,
    KEY_PREFIX_TASK,
    KEY_PREFIX_USER,
    TTL_ANALYSIS,
    TTL_GAME,
    TTL_LOCK,
    TTL_PLAYER,
    TTL_RATE_LIMIT,
    TTL_STATS,
    TTL_TAG,
    TTL_TASK,
    TTL_USER,
    cache_analysis,
    cache_game,
    cache_player,
    cache_user_games,
    get_cache_stats,
    get_cached_analysis,
    get_cached_game,
    get_cached_player,
    get_cached_user_games,
    get_redis_client,
    get_redis_key,
    invalidate_analysis_cache,
    invalidate_game_cache,
    invalidate_player_cache,
    invalidate_user_games_cache,
    redis_add_to_tag,
    redis_cache,
    redis_delete,
    redis_exists,
    redis_get,
    redis_get_tag_keys,
    redis_incr,
    redis_invalidate_by_prefix,
    redis_invalidate_by_tags,
    redis_keys,
    redis_lock,
    redis_pipeline_execute,
    redis_set,
    redis_unlock,
    track_cache_hit,
    track_cache_miss,
    with_redis_lock,
)
from .task_manager import TaskManager
from .windows_worker import WindowsWorkerPool

# Note: Type definitions are in the types.py module,
# but we don't import them here to avoid circular imports.
# Use import statements where needed instead.

__all__ = [
    # Other exports
    "WindowsWorkerPool",
    "TaskManager",
    "TaskError",
    "ResourceNotFoundError",
    "ValidationError",
    "ExternalServiceError",
    "ChessServiceError",
    "CreditLimitError",
    "InvalidOperationError",
    "create_error_response",
    "create_success_response",
    "BaseError",
    "AuthenticationError",
    "PermissionDeniedError",
    "RateLimitExceededError",
    "ServiceUnavailableError",
    "handle_api_error",
    "exception_handler",
    "get_redis_client",
    "get_redis_key",
    "redis_get",
    "redis_set",
    "redis_delete",
    "redis_exists",
    "redis_incr",
    "redis_keys",
    "redis_pipeline_execute",
    "redis_lock",
    "redis_unlock",
    "with_redis_lock",
    "redis_cache",
    "redis_invalidate_by_prefix",
    "redis_invalidate_by_tags",
    "redis_add_to_tag",
    "redis_get_tag_keys",
    "cache_game",
    "get_cached_game",
    "invalidate_game_cache",
    "cache_user_games",
    "get_cached_user_games",
    "invalidate_user_games_cache",
    "cache_analysis",
    "get_cached_analysis",
    "invalidate_analysis_cache",
    "cache_player",
    "get_cached_player",
    "invalidate_player_cache",
    "track_cache_hit",
    "track_cache_miss",
    "get_cache_stats",
    "CacheInvalidationMiddleware",
    "setup_cache_invalidation",
    "invalidate_cache_on_save",
    "invalidate_cache_on_delete",
    "KEY_PREFIX_GAME",
    "KEY_PREFIX_USER",
    "KEY_PREFIX_TASK",
    "KEY_PREFIX_ANALYSIS",
    "KEY_PREFIX_PLAYER",
    "KEY_PREFIX_CACHE_TAG",
    "KEY_PREFIX_LOCK",
    "KEY_PREFIX_RATE_LIMIT",
    "KEY_PREFIX_STATS",
    "TTL_GAME",
    "TTL_USER",
    "TTL_TASK",
    "TTL_ANALYSIS",
    "TTL_PLAYER",
    "TTL_TAG",
    "TTL_LOCK",
    "TTL_RATE_LIMIT",
    "TTL_STATS",
]
