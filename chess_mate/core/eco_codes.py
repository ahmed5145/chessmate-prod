"""
Module containing ECO (Encyclopedia of Chess Openings) codes and related utilities.
"""

import logging

logger = logging.getLogger(__name__)

ECO_OPENINGS = {
    "A00": "Irregular Opening",
    "A01": "Nimzovich-Larsen Attack",
    "A02": "Bird Opening",
    "A03": "Bird Opening: Dutch Variation",
    "A04": "Reti Opening",
    "A05": "Reti Opening: King's Indian Attack",
    "A06": "Reti Opening: Old Indian Attack",
    "A07": "Reti Opening: King's Indian Attack",
    "A08": "Reti Opening: King's Indian Attack",
    "A09": "Reti Opening: Advance Variation",
    "A10": "English Opening",
    "A11": "English Opening: Caro-Kann Defensive System",
    "A12": "English Opening: Caro-Kann Defensive System",
    "A13": "English Opening: Agincourt Defense",
    "A14": "English Opening: Neo-Catalan Declined",
    "A15": "English Opening: Anglo-Indian Defense",
    "A16": "English Opening: Anglo-Indian Defense",
    "A17": "English Opening: Anglo-Indian Defense",
    "A18": "English Opening: Mikenas-Carls Variation",
    "A19": "English Opening: Mikenas-Carls, Sicilian Variation",
    "A20": "English Opening: King's English Variation",
    "A21": "English Opening: King's English Variation, Reversed Sicilian",
    "A22": "English Opening: King's English, Two Knights Variation",
    "A23": "English Opening: Bremen System, Keres Variation",
    "A24": "English Opening: King's English Variation, Closed System",
    "A25": "English Opening: King's English Variation, Reversed Closed Sicilian",
    "A26": "English Opening: King's English Variation, Closed System",
    "A27": "English Opening: Three Knights System",
    "A28": "English Opening: Four Knights System",
    "A29": "English Opening: Four Knights, Kingside Fianchetto",
    "A30": "English Opening: Symmetrical Variation",
    "A31": "English Opening: Symmetrical, Benoni Formation",
    "A32": "English Opening: Symmetrical Variation",
    "A33": "English Opening: Symmetrical, Anti-Benoni Variation",
    "A34": "English Opening: Symmetrical Variation",
    "A35": "English Opening: Symmetrical, Four Knights System",
    "A36": "English Opening: Ultra-Symmetrical Variation",
    "A37": "English Opening: Symmetrical, Botvinnik System",
    "A38": "English Opening: Symmetrical Variation",
    "A39": "English Opening: Symmetrical, Main Line",
    "A40": "Queen's Pawn",
    "A41": "Queen's Pawn: Modern Defense",
    "A42": "Modern Defense: Averbakh System",
    "A43": "Old Benoni Defense",
    "A44": "Old Benoni Defense: Czech Variation",
    "A45": "Indian Game",
    "A46": "Indian Game: London System",
    "A47": "Queen's Indian Defense",
    "A48": "King's Indian Defense: East Indian Defense",
    "A49": "King's Indian Defense: Fianchetto Variation",
    "A50": "Indian Game: Normal Variation",
    "A51": "Budapest Gambit",
    "A52": "Budapest Gambit: Accepted",
    "A53": "Old Indian Defense",
    "A54": "Old Indian Defense: Ukrainian Variation",
    "A55": "Old Indian Defense: Main Line",
    "A56": "Benoni Defense",
    "A57": "Benko Gambit",
    "A58": "Benko Gambit Accepted",
    "A59": "Benko Gambit: Main Line",
    "A60": "Benoni Defense: Modern Variation",
    "A61": "Benoni Defense: Knight's Tour Variation",
    "A62": "Benoni Defense: Fianchetto Variation",
    "A63": "Benoni Defense: Fianchetto Variation, Main Line",
    "A64": "Benoni Defense: Fianchetto Variation, Main Line",
    "A65": "Benoni Defense: King's Pawn Line",
    "A66": "Benoni Defense: Pawn Storm Variation",
    "A67": "Benoni Defense: Taimanov Variation",
    "A68": "Benoni Defense: Four Pawns Attack",
    "A69": "Benoni Defense: Four Pawns Attack, Main Line",
    "A70": "Benoni Defense: Classical Variation",
    "A71": "Benoni Defense: Classical, Without e4",
    "A72": "Benoni Defense: Classical, Without e4",
    "A73": "Benoni Defense: Classical, Main Line",
    "A74": "Benoni Defense: Classical, Main Line",
    "A75": "Benoni Defense: Classical, Main Line",
    "A76": "Benoni Defense: Classical, Main Line",
    "A77": "Benoni Defense: Classical, Main Line",
    "A78": "Benoni Defense: Classical, Main Line",
    "A79": "Benoni Defense: Classical, Main Line",
    "A80": "Dutch Defense",
    "A81": "Dutch Defense: Blackmar's Second Gambit",
    "A82": "Dutch Defense: Staunton Gambit",
    "A83": "Dutch Defense: Staunton Gambit, Accepted",
    "A84": "Dutch Defense: Classical Variation",
    "A85": "Dutch Defense: Queen's Knight Variation",
    "A86": "Dutch Defense: Leningrad Variation",
    "A87": "Dutch Defense: Leningrad, Main Line",
    "A88": "Dutch Defense: Leningrad, Main Line",
    "A89": "Dutch Defense: Leningrad, Main Line",
    "A90": "Dutch Defense: Classical Variation",
    "A91": "Dutch Defense: Classical Variation",
    "A92": "Dutch Defense: Stonewall",
    "A93": "Dutch Defense: Stonewall, Botvinnik Variation",
    "A94": "Dutch Defense: Stonewall with Ba3",
    "A95": "Dutch Defense: Stonewall, Main Line",
    "A96": "Dutch Defense: Classical Variation",
    "A97": "Dutch Defense: Ilyin-Genevsky Variation",
    "A98": "Dutch Defense: Ilyin-Genevsky Variation, Main Line",
    "A99": "Dutch Defense: Ilyin-Genevsky Variation, Main Line",
    "B00": "King's Pawn Opening",
    "B01": "Scandinavian Defense",
    "B02": "Alekhine Defense",
    "B03": "Alekhine Defense: Modern Variation",
    "B06": "Modern Defense",
    "B07": "Pirc Defense",
    "B10": "Caro-Kann Defense",
    "B12": "Caro-Kann Defense: Advance Variation",
    "B20": "Sicilian Defense",
    "B21": "Sicilian Defense: Smith-Morra Gambit",
    "B22": "Sicilian Defense: Alapin Variation",
    "B23": "Sicilian Defense: Closed",
    "B27": "Sicilian Defense: Hyper-Accelerated Dragon",
    "B30": "Sicilian Defense: Old Sicilian",
    "B32": "Sicilian Defense: Open",
    "B40": "Sicilian Defense: French Variation",
    "B50": "Sicilian Defense",
    "B51": "Sicilian Defense: Canal-Sokolsky Attack",
    "B52": "Sicilian Defense: Canal-Sokolsky Attack, Bronstein Variation",
    "B53": "Sicilian Defense: Modern Variations",
    "B54": "Sicilian Defense: Modern Variations, Main Line",
    "B55": "Sicilian Defense: Modern Variations, Modern Dragon",
    "B56": "Sicilian Defense: Modern Variations, Two Knights Variation",
    "B57": "Sicilian Defense: Modern Variations, Dragon Variation",
    "B58": "Sicilian Defense: Classical Variation",
    "B59": "Sicilian Defense: Classical Variation, Dragon Variation",
    "B70": "Sicilian Defense: Dragon Variation",
    "B80": "Sicilian Defense: Scheveningen Variation",
    "B90": "Sicilian Defense: Najdorf Variation",
    "C00": "French Defense",
    "C02": "French Defense: Advance Variation",
    "C10": "French Defense: Paulsen Variation",
    "C15": "French Defense: Winawer Variation",
    "C20": "King's Pawn Game",
    "C21": "Center Game",
    "C23": "Bishop's Opening",
    "C25": "Vienna Game",
    "C30": "King's Gambit",
    "C40": "King's Knight Opening",
    "C42": "Petrov Defense",
    "C44": "King's Pawn Game: King's Knight Variation",
    "C45": "Scotch Game",
    "C50": "Italian Game",
    "C51": "Evans Gambit",
    "C55": "Two Knights Defense",
    "C60": "Ruy Lopez",
    "C65": "Ruy Lopez: Berlin Defense",
    "C70": "Ruy Lopez: Closed Variations",
    "C80": "Ruy Lopez: Open Variations",
    "C82": "Ruy Lopez: Open, St. Petersburg Variation",
    "C90": "Ruy Lopez: Closed",
    "D00": "Queen's Pawn Game",
    "D02": "Queen's Pawn Game: London System",
    "D04": "Queen's Pawn Game: Colle System",
    "D10": "Slav Defense",
    "D15": "Slav Defense: Three Knights Variation",
    "D20": "Queen's Gambit Accepted",
    "D30": "Queen's Gambit Declined",
    "D35": "Queen's Gambit Declined: Exchange Variation",
    "D37": "Queen's Gambit Declined: Classical Variation",
    "D43": "Semi-Slav Defense",
    "D45": "Semi-Slav Defense: Main Line",
    "D50": "Queen's Gambit Declined: Modern Variation",
    "D80": "Gruenfeld Defense",
    "D85": "Gruenfeld Defense: Exchange Variation",
    "D90": "Gruenfeld Defense: Three Knights Variation",
    "E00": "Queen's Pawn Game: Indian Defenses",
    "E10": "Queen's Pawn Game: Blumenfeld Counter-Gambit",
    "E12": "Queen's Indian Defense",
    "E20": "Nimzo-Indian Defense",
    "E32": "Nimzo-Indian Defense: Classical Variation",
    "E40": "Nimzo-Indian Defense: Rubinstein Variation",
    "E50": "King's Indian Defense",
    "E51": "King's Indian Defense: Normal Variation",
    "E52": "King's Indian Defense: Samisch Variation",
    "E53": "King's Indian Defense: Classical Variation",
    "E54": "King's Indian Defense: Classical, 1.e4",
    "E55": "King's Indian Defense: Classical, 1.e4, 2.d4",
    "E56": "King's Indian Defense: Classical, 1.e4, 2.d4, 3.Nf3",
    "E57": "King's Indian Defense: Classical, 1.e4, 2.d4, 3.Nf3, 4.c3",
    "E58": "King's Indian Defense: Classical, 1.e4, 2.d4, 3.Nf3, 4.c3, 5.Nc3",
    "E59": "King's Indian Defense: Classical, 1.e4, 2.d4, 3.Nf3, 4.c3, 5.Nc3, 6.Nf3",
    "E60": "King's Indian Defense",
    "E61": "King's Indian Defense: Semi-Classical Variation",
    "E62": "King's Indian Defense: Fianchetto Variation",
    "E63": "King's Indian Defense: Fianchetto Variation, Panno Variation",
    "E64": "King's Indian Defense: Fianchetto Variation, Yugoslav System",
    "E65": "King's Indian Defense: Fianchetto Variation, Yugoslav, 7.O-O",
    "E66": "King's Indian Defense: Fianchetto Variation, Yugoslav, Advance System",
    "E67": "King's Indian Defense: Fianchetto Variation, Classical Variation",
    "E68": "King's Indian Defense: Fianchetto Variation, Classical Main Line",
    "E69": "King's Indian Defense: Fianchetto Variation, Classical Main Line, 13.d5",
    "E70": "King's Indian Defense: Normal Variation",
    "E80": "King's Indian Defense: Samisch Variation",
    "E90": "King's Indian Defense: Classical Variation",
}


def get_opening_name(eco_code):
    """Get opening name from ECO code."""
    if not eco_code:
        logger.warning("Empty ECO code provided")
        return "Unknown Opening"

    logger.info(f"Looking up opening name for ECO code: {eco_code!r}")  # Use repr to show exact string

    # Normalize ECO code
    eco_code = eco_code.strip().upper()
    logger.info(f"Normalized ECO code: {eco_code!r}")  # Log after normalization

    opening_name = ECO_OPENINGS.get(eco_code)
    if opening_name:
        logger.info(f"Found opening name: {opening_name}")
        return opening_name
    else:
        # Log all available keys that start with the same letter
        if eco_code and len(eco_code) >= 1:
            similar_codes = [code for code in ECO_OPENINGS.keys() if code.startswith(eco_code[0])]
            logger.warning(f"No opening name found for ECO code: {eco_code}. Similar codes: {similar_codes}")
        else:
            logger.warning(f"No opening name found for ECO code: {eco_code}")
        return "Unknown Opening"
