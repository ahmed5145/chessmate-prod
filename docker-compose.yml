version: '3.8'

services:
  web:
    build: .
    command: bash -c "cd chess_mate && python manage.py wait_for_db && python manage.py migrate && python manage.py collectstatic --noinput && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./chess_mate:/app/chess_mate
      - static_volume:/app/chess_mate/staticfiles
      - media_volume:/app/chess_mate/media
      - log_volume:/app/chess_mate/logs
    ports:
      - "8000:8000"
    environment:
      - SERVICE_TYPE=web
      - DJANGO_SETTINGS_MODULE=chess_mate.settings
    env_file:
      - chess_mate/.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 60s
      timeout: 20s
      retries: 5
      start_period: 60s
    user: chessmate

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=chessmate
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  celery:
    build: .
    command: bash -c "cd chess_mate && python manage.py wait_for_db && celery -A chess_mate worker -l info"
    volumes:
      - ./chess_mate:/app/chess_mate
      - log_volume:/app/chess_mate/logs
      - media_volume:/app/chess_mate/media
    environment:
      - SERVICE_TYPE=celery
      - DJANGO_SETTINGS_MODULE=chess_mate.settings
      - C_FORCE_ROOT=false
    env_file:
      - chess_mate/.env
    depends_on:
      web:
        condition: service_healthy
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    restart: on-failure
    user: chessmate
    healthcheck:
      test: ["CMD-SHELL", "celery -A chess_mate inspect ping -d celery@$$HOSTNAME"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
  log_volume: 