version: '3.8'

services:
  frontend:
    build:
      context: ./chess_mate/frontend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    environment:
      - NODE_ENV=production
      - NODE_OPTIONS=--max_old_space_size=512
    volumes:
      - frontend_build:/app/build
    command: sh -c "npm run build && cp -r /app/build/* /usr/share/nginx/html/"
    deploy:
      resources:
        limits:
          memory: 768M
        reservations:
          memory: 256M
    networks:
      - chessmate_network

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: gunicorn chess_mate.wsgi:application --bind 0.0.0.0:8000 --workers 4 --timeout 120
    restart: unless-stopped
    volumes:
      - ./chess_mate:/app/chess_mate
      - static_volume:/app/chess_mate/staticfiles
      - media_volume:/app/chess_mate/media
      - ./logs:/app/chess_mate/logs
    expose:
      - 8000
    environment:
      - REDIS_URL=redis://default:VfjkF0I0LZfuFehoU17U7C14d5IV3ysp@redis-16246.c275.us-east-1-4.ec2.redns.redis-cloud.com:16246
      - CELERY_BROKER_URL=redis://default:VfjkF0I0LZfuFehoU17U7C14d5IV3ysp@redis-16246.c275.us-east-1-4.ec2.redns.redis-cloud.com:16246
      - CELERY_RESULT_BACKEND=redis://default:VfjkF0I0LZfuFehoU17U7C14d5IV3ysp@redis-16246.c275.us-east-1-4.ec2.redns.redis-cloud.com:16246
    depends_on:
      - celery
      - frontend
    networks:
      - chessmate_network

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A chess_mate worker --loglevel=info
    restart: unless-stopped
    volumes:
      - ./chess_mate:/app/chess_mate
      - ./logs:/app/chess_mate/logs
    environment:
      - REDIS_URL=redis://default:VfjkF0I0LZfuFehoU17U7C14d5IV3ysp@redis-16246.c275.us-east-1-4.ec2.redns.redis-cloud.com:16246
      - CELERY_BROKER_URL=redis://default:VfjkF0I0LZfuFehoU17U7C14d5IV3ysp@redis-16246.c275.us-east-1-4.ec2.redns.redis-cloud.com:16246
      - CELERY_RESULT_BACKEND=redis://default:VfjkF0I0LZfuFehoU17U7C14d5IV3ysp@redis-16246.c275.us-east-1-4.ec2.redns.redis-cloud.com:16246
    networks:
      - chessmate_network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - static_volume:/app/chess_mate/staticfiles
      - media_volume:/app/chess_mate/media
      - /var/www/chessmate/data/certbot/conf:/etc/letsencrypt:rw
      - /var/www/chessmate/data/certbot/www:/var/www/certbot:rw
      - frontend_build:/usr/share/nginx/html
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
      - frontend
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      - chessmate_network

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - chessmate_network

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - chessmate_network

  node-exporter:
    image: prom/node-exporter:latest
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - chessmate_network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "8080:8080"
    networks:
      - chessmate_network

  certbot:
    image: certbot/certbot
    volumes:
      - /var/www/chessmate/data/certbot/conf:/etc/letsencrypt:rw
      - /var/www/chessmate/data/certbot/www:/var/www/certbot:rw
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - chessmate_network

networks:
  chessmate_network:
    driver: bridge

volumes:
  static_volume:
  media_volume:
  prometheus_data:
  grafana_data:
  frontend_build:
